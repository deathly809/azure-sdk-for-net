"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request = require("request");
const semver = require("semver");
const console_1 = require("./console");
function Rest(url) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            let stream = request.get(url, {
                strictSSL: true,
                timeout: 15000,
                headers: {
                    'user-agent': 'autorest-installer',
                }
            });
            let responseString = '';
            stream.on('data', (data => {
                responseString += data;
            }));
            stream.on('end', () => {
                resolve(JSON.parse(responseString));
            });
            stream.on('error', (err) => {
                console_1.Console.Debug(`Unable to get npm package info...`);
                resolve(null);
            });
        });
    });
}
class DistTags {
}
exports.DistTags = DistTags;
class NodePackage {
    get distTags() {
        return this["dist-tags"];
    }
}
exports.NodePackage = NodePackage;
class Npm {
    static LatestRelease() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield Rest(`https://registry.npmjs.org/autorest`);
            if (response) {
                const lp = response;
                if (lp["dist-tags"] && lp["dist-tags"].latest) {
                    return semver.valid(lp["dist-tags"].latest);
                }
            }
            return null;
        });
    }
}
exports.Npm = Npm;
//# sourceMappingURL=npmjs.js.map