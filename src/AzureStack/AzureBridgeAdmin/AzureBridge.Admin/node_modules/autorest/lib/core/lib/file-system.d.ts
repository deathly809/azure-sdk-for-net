export interface IFileSystem {
    EnumerateFileUris(folderUri: string): AsyncIterable<string>;
    ReadFile(uri: string): Promise<string>;
}
export declare class MemoryFileSystem implements IFileSystem {
    static readonly DefaultVirtualRootUri: string;
    private filesByUri;
    constructor(files: Map<string, string>);
    readonly Outputs: Map<string, string>;
    ReadFile(uri: string): Promise<string>;
    EnumerateFileUris(folderUri?: string): AsyncIterable<string>;
    WriteFile(uri: string, content: string): Promise<void>;
}
export declare class RealFileSystem implements IFileSystem {
    constructor();
    EnumerateFileUris(folderUri: string): AsyncIterable<string>;
    ReadFile(uri: string): Promise<string>;
    WriteFile(uri: string, content: string): Promise<void>;
}
