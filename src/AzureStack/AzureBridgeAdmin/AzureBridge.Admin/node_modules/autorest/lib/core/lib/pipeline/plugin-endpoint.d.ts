/// <reference types="node" />
import { EventEmitter } from "../events";
import { ChildProcess } from "child_process";
import { CancellationToken } from "../ref/cancallation";
import { MessageConnection } from "../ref/jsonrpc";
import { DataStoreViewReadonly, DataStoreView } from "../data-store/data-store";
import { Message } from "../message";
export declare class AutoRestPlugin extends EventEmitter {
    private static lastSessionId;
    private static CreateSessionId();
    static FromModule(modulePath: string): Promise<AutoRestPlugin>;
    static FromChildProcess(childProc: ChildProcess): Promise<AutoRestPlugin>;
    constructor(channel: MessageConnection);
    private apiTarget;
    private apiInitiator;
    private apiInitiatorEndpoints;
    GetPluginNames(cancellationToken: CancellationToken): Promise<string[]>;
    Process(pluginName: string, configuration: (key: string) => any, inputScope: DataStoreViewReadonly, outputScope: DataStoreView, onMessage: (message: Message) => void, cancellationToken: CancellationToken): Promise<boolean>;
    private static CreateEndpointFor(pluginName, configuration, inputScope, outputScope, onMessage, cancellationToken);
}
