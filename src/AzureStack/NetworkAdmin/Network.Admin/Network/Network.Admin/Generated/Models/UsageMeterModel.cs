// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Network.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of a UsageMeter.
    /// </summary>
    public partial class UsageMeterModel
    {
        /// <summary>
        /// Initializes a new instance of the UsageMeterModel class.
        /// </summary>
        public UsageMeterModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UsageMeterModel class.
        /// </summary>
        /// <param name="meterId">The meter id.</param>
        /// <param name="meterName">The meter name.</param>
        /// <param name="meterCategory">The meter category.</param>
        /// <param name="meterSubCategory">The meter sub category.</param>
        /// <param name="unit">The unit.</param>
        public UsageMeterModel(string meterId = default(string), string meterName = default(string), string meterCategory = default(string), string meterSubCategory = default(string), string unit = default(string))
        {
            MeterId = meterId;
            MeterName = meterName;
            MeterCategory = meterCategory;
            MeterSubCategory = meterSubCategory;
            Unit = unit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the meter id.
        /// </summary>
        [JsonProperty(PropertyName = "meterId")]
        public string MeterId { get; set; }

        /// <summary>
        /// Gets or sets the meter name.
        /// </summary>
        [JsonProperty(PropertyName = "meterName")]
        public string MeterName { get; set; }

        /// <summary>
        /// Gets or sets the meter category.
        /// </summary>
        [JsonProperty(PropertyName = "meterCategory")]
        public string MeterCategory { get; set; }

        /// <summary>
        /// Gets or sets the meter sub category.
        /// </summary>
        [JsonProperty(PropertyName = "meterSubCategory")]
        public string MeterSubCategory { get; set; }

        /// <summary>
        /// Gets or sets the unit.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

    }
}
