// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Network.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network quota resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkQuota : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkQuota class.
        /// </summary>
        public NetworkQuota()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkQuota class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Region Location of resource.</param>
        /// <param name="tags">List of key value pairs.</param>
        /// <param name="maxPublicIpsPerSubscription">Maximum number of Public
        /// IP Addresses a tenant subscription can provision.</param>
        /// <param name="maxVnetsPerSubscription">Maximum number of Virtual
        /// Networks a tenant subscription can provision.</param>
        /// <param name="maxVirtualNetworkGatewaysPerSubscription">Maximum
        /// number of Virtual Network Gateways a tenant subscription can
        /// provision.</param>
        /// <param
        /// name="maxVirtualNetworkGatewayConnectionsPerSubscription">Maximum
        /// number of Virtual Network Gateway Connections a tenant subscription
        /// can provision.</param>
        /// <param name="maxLoadBalancersPerSubscription">Maximum number of
        /// Load Balancers a tenant subscription can provision.</param>
        /// <param name="maxNicsPerSubscription">Maximum number of NICs a
        /// tenant subscription can provision.</param>
        /// <param name="maxSecurityGroupsPerSubscription">Maximum number of
        /// Security Groups a tenant subscription can provision.</param>
        /// <param name="migrationPhase">State of migration such as None,
        /// Prepare, Commit and Abort.</param>
        public NetworkQuota(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? maxPublicIpsPerSubscription = default(int?), int? maxVnetsPerSubscription = default(int?), int? maxVirtualNetworkGatewaysPerSubscription = default(int?), int? maxVirtualNetworkGatewayConnectionsPerSubscription = default(int?), int? maxLoadBalancersPerSubscription = default(int?), int? maxNicsPerSubscription = default(int?), int? maxSecurityGroupsPerSubscription = default(int?), object migrationPhase = default(object))
            : base(id, name, type, location, tags)
        {
            MaxPublicIpsPerSubscription = maxPublicIpsPerSubscription;
            MaxVnetsPerSubscription = maxVnetsPerSubscription;
            MaxVirtualNetworkGatewaysPerSubscription = maxVirtualNetworkGatewaysPerSubscription;
            MaxVirtualNetworkGatewayConnectionsPerSubscription = maxVirtualNetworkGatewayConnectionsPerSubscription;
            MaxLoadBalancersPerSubscription = maxLoadBalancersPerSubscription;
            MaxNicsPerSubscription = maxNicsPerSubscription;
            MaxSecurityGroupsPerSubscription = maxSecurityGroupsPerSubscription;
            MigrationPhase = migrationPhase;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets maximum number of Public IP Addresses a tenant
        /// subscription can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxPublicIpsPerSubscription")]
        public int? MaxPublicIpsPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of Virtual Networks a tenant
        /// subscription can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxVnetsPerSubscription")]
        public int? MaxVnetsPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of Virtual Network Gateways a tenant
        /// subscription can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxVirtualNetworkGatewaysPerSubscription")]
        public int? MaxVirtualNetworkGatewaysPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of Virtual Network Gateway Connections
        /// a tenant subscription can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxVirtualNetworkGatewayConnectionsPerSubscription")]
        public int? MaxVirtualNetworkGatewayConnectionsPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of Load Balancers a tenant subscription
        /// can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxLoadBalancersPerSubscription")]
        public int? MaxLoadBalancersPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of NICs a tenant subscription can
        /// provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxNicsPerSubscription")]
        public int? MaxNicsPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets maximum number of Security Groups a tenant
        /// subscription can provision.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MaxSecurityGroupsPerSubscription")]
        public int? MaxSecurityGroupsPerSubscription { get; set; }

        /// <summary>
        /// Gets or sets state of migration such as None, Prepare, Commit and
        /// Abort.
        /// </summary>
        [JsonProperty(PropertyName = "properties.MigrationPhase")]
        public object MigrationPhase { get; set; }

    }
}
